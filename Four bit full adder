----------------------------------------------------------------------------------
-- Company: 
-- Engineer: 
-- 
-- Create Date:    14:21:24 07/03/2021 
-- Design Name: 
-- Module Name:    fourBitFullAdder - Behavioral 
-- Project Name: 
-- Target Devices: 
-- Tool versions: 
-- Description: 
--
-- Dependencies: 
--
-- Revision: 
-- Revision 0.01 - File Created
-- Additional Comments: 
--
----------------------------------------------------------------------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity fourBitFullAdder is
	port(
		C0 : in std_logic;
	  A,B : in std_logic_vector(3 downto 0); 
	    S : out std_logic_vector(3 downto 0);
   C_out : out std_logic		 
	);
end fourBitFullAdder;

architecture Behavioral of fourBitFullAdder is
	component fullAdderCkt 
		port(
			A,B,Cin  : in std_logic;
			Sum,Cout : out std_logic
		);
	end component;
	signal C : std_logic_vector(2 downto 0);
	
begin
	Adder1 : fullAdderCkt port map(
		Cin => C0,
		A   => A(0),
		B   => B(0),
		Sum => S(0),
		Cout=> C(0)
	
	); 
	
	Adder2 : fullAdderCkt port map(
		Cin => C(0),
		A   => A(1),
		B   => B(1),
		Sum => S(1),
		Cout=> C(1)
	
	); 
	
	Adder3 : fullAdderCkt port map(
		Cin => C(1),
		A   => A(2),
		B   => B(2),
		Sum => S(2),
		Cout=> C(2)
	
	); 
	
	Adder4 : fullAdderCkt port map(
		Cin => C(2),
		A   => A(3),
		B   => B(3),
		Sum => S(3),
		Cout=> C_out
	
	); 
	


end Behavioral;
